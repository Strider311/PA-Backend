// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pa.Backend.Dal;

#nullable disable

namespace Pa.Backend.Migrations
{
    [DbContext(typeof(PaContext))]
    partial class PaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pa.Backend.Dal.Images", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("dtCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("healthyPercentage")
                        .HasColumnType("real");

                    b.Property<DateTime>("lstModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("unhealthyPercentage")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("SessionId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Pa.Backend.Dal.Sessions", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("dtCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("healthyPercentage")
                        .HasColumnType("real");

                    b.Property<DateTime>("lstModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("sessionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("unhealthyPercentage")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Pa.Backend.Dal.Images", b =>
                {
                    b.HasOne("Pa.Backend.Dal.Sessions", "session_id")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("session_id");
                });
#pragma warning restore 612, 618
        }
    }
}
